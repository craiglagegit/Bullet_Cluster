#############################################################################
# Makefile for building: TriaxialHalo.app/Contents/MacOS/TriaxialHalo
# Generated by qmake (2.01a) (Qt 4.8.6) on: Wed Feb 18 09:10:12 2015
# Project:  TriaxialHalo.pro
# Template: app
# Command: /usr/local/bin/qmake -o Makefile TriaxialHalo.pro
#############################################################################

####### Compiler, tools and options

CC            = clang
CXX           = clang++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Cellar/qt/4.8.6/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt/4.8.6/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.6/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.6/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.6/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.6/include -I/usr/local/include -I/usr/local/Cellar/hdf5/1.8.13/include -I/usr/local/Cellar/fftw/3.3.4/include -I. -F/usr/local/Cellar/qt/4.8.6/lib
LINK          = clang++
LFLAGS        = -headerpad_max_install_names -stdlib=libc++ -mmacosx-version-min=10.7 -arch x86_64
LIBS          = $(SUBLIBS) -F/usr/local/Cellar/qt/4.8.6/lib -L/usr/local/lib -L/usr/local/Cellar/hdf5/1.8.13/lib -L/usr/local/Cellar/fftw/3.3.4/lib -L/export/ursa1/csl336/Software/QtSdk/ -L/usr/local/Cellar/qt/4.8.6/lib -Wl -lm -lz -lhdf5 -lhdf5_cpp -lgsl -lgslcblas -lfftw3 -framework QtGui -L/usr/local/Cellar/qt/4.8.6/lib -F/usr/local/Cellar/qt/4.8.6/lib -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.7

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = potential.cpp \
		triaxial.cpp \
		fileio.cpp \
		halo.cpp \
		collision.cpp \
		hdf5write.cpp \
		garfields/cxxutils.cc \
		garfields/fftOperators.cc \
		garfields/helicity.cc \
		garfields/magVar.cc \
		garfields/divclean.cc \
		garfields/functions.cc \
		garfields/gaussRandom.cc \
		garfields/kvector.cc \
		garfields/power_gen.cc \
		garfields/variables.cc \
		garfields/garFields.cc 
OBJECTS       = potential.o \
		triaxial.o \
		fileio.o \
		halo.o \
		collision.o \
		hdf5write.o \
		cxxutils.o \
		fftOperators.o \
		helicity.o \
		magVar.o \
		divclean.o \
		functions.o \
		gaussRandom.o \
		kvector.o \
		power_gen.o \
		variables.o \
		garFields.o
DIST          = /usr/local/Cellar/qt/4.8.6/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.6/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/shared.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/include_source_dir.prf \
		TriaxialHalo.pro
QMAKE_TARGET  = TriaxialHalo
DESTDIR       = 
TARGET        = TriaxialHalo.app/Contents/MacOS/TriaxialHalo

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-arch \
		x86_64 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile TriaxialHalo.app/Contents/PkgInfo TriaxialHalo.app/Contents/Resources/empty.lproj TriaxialHalo.app/Contents/Info.plist $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) TriaxialHalo.app/Contents/MacOS/ || $(MKDIR) TriaxialHalo.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: TriaxialHalo.pro  /usr/local/Cellar/qt/4.8.6/mkspecs/unsupported/macx-clang-libc++/qmake.conf /usr/local/Cellar/qt/4.8.6/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.6/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/shared.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.6/mkspecs/features/include_source_dir.prf \
		/usr/local/Cellar/qt/4.8.6/lib/QtGui.framework/QtGui.prl \
		/usr/local/Cellar/qt/4.8.6/lib/QtCore.framework/QtCore.prl
	$(QMAKE) -o Makefile TriaxialHalo.pro
/usr/local/Cellar/qt/4.8.6/mkspecs/common/unix.conf:
/usr/local/Cellar/qt/4.8.6/mkspecs/common/mac.conf:
/usr/local/Cellar/qt/4.8.6/mkspecs/common/gcc-base.conf:
/usr/local/Cellar/qt/4.8.6/mkspecs/common/gcc-base-macx.conf:
/usr/local/Cellar/qt/4.8.6/mkspecs/common/clang.conf:
/usr/local/Cellar/qt/4.8.6/mkspecs/qconfig.pri:
/usr/local/Cellar/qt/4.8.6/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt_functions.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt_config.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/exclusive_builds.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/default_pre.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/default_pre.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/release.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/default_post.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/default_post.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/x86_64.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/objective_c.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/shared.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/warn_on.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/qt.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/unix/thread.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/moc.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/rez.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/mac/sdk.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/resources.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/uic.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/yacc.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/lex.prf:
/usr/local/Cellar/qt/4.8.6/mkspecs/features/include_source_dir.prf:
/usr/local/Cellar/qt/4.8.6/lib/QtGui.framework/QtGui.prl:
/usr/local/Cellar/qt/4.8.6/lib/QtCore.framework/QtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile TriaxialHalo.pro

TriaxialHalo.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) TriaxialHalo.app/Contents || $(MKDIR) TriaxialHalo.app/Contents 
	@$(DEL_FILE) TriaxialHalo.app/Contents/PkgInfo
	@echo "APPL????" >TriaxialHalo.app/Contents/PkgInfo
TriaxialHalo.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) TriaxialHalo.app/Contents/Resources || $(MKDIR) TriaxialHalo.app/Contents/Resources 
	@touch TriaxialHalo.app/Contents/Resources/empty.lproj
	
TriaxialHalo.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) TriaxialHalo.app/Contents || $(MKDIR) TriaxialHalo.app/Contents 
	@$(DEL_FILE) TriaxialHalo.app/Contents/Info.plist
	@sed -e "s,@SHORT_VERSION@,1.0,g" -e "s,@TYPEINFO@,????,g" -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,TriaxialHalo,g" -e "s,@TYPEINFO@,????,g" /usr/local/Cellar/qt/4.8.6/mkspecs/unsupported/macx-clang-libc++/Info.plist.app >TriaxialHalo.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/TriaxialHalo1.0.0 || $(MKDIR) .tmp/TriaxialHalo1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/TriaxialHalo1.0.0/ && $(COPY_FILE) --parents triaxial.h globals.h potential.h halo.h fileio.h hdf5write.h collision.h garfields/constants.h garfields/divclean.h garfields/functions.h garfields/helicity.h garfields/message_error.h garfields/simparams.h garfields/cxxutils.h garfields/fftOperators.h garfields/garFields.h garfields/kvector.h garfields/openmp_support.h garfields/variables.h garfields/datatypes.h garfields/fftw_array.h garfields/gaussRandom.h garfields/magVar.h garfields/power_gen.h .tmp/TriaxialHalo1.0.0/ && $(COPY_FILE) --parents potential.cpp triaxial.cpp fileio.cpp halo.cpp collision.cpp hdf5write.cpp garfields/cxxutils.cc garfields/fftOperators.cc garfields/helicity.cc garfields/magVar.cc garfields/divclean.cc garfields/functions.cc garfields/gaussRandom.cc garfields/kvector.cc garfields/power_gen.cc garfields/variables.cc garfields/garFields.cc .tmp/TriaxialHalo1.0.0/ && (cd `dirname .tmp/TriaxialHalo1.0.0` && $(TAR) TriaxialHalo1.0.0.tar TriaxialHalo1.0.0 && $(COMPRESS) TriaxialHalo1.0.0.tar) && $(MOVE) `dirname .tmp/TriaxialHalo1.0.0`/TriaxialHalo1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/TriaxialHalo1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r TriaxialHalo.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

potential.o: potential.cpp potential.h \
		globals.h \
		fileio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o potential.o potential.cpp

triaxial.o: triaxial.cpp triaxial.h \
		collision.h \
		globals.h \
		fileio.h \
		hdf5write.h \
		halo.h \
		potential.h \
		garfields/garFields.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o triaxial.o triaxial.cpp

fileio.o: fileio.cpp fileio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fileio.o fileio.cpp

halo.o: halo.cpp halo.h \
		globals.h \
		fileio.h \
		potential.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o halo.o halo.cpp

collision.o: collision.cpp collision.h \
		globals.h \
		fileio.h \
		hdf5write.h \
		halo.h \
		potential.h \
		garfields/garFields.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o collision.o collision.cpp

hdf5write.o: hdf5write.cpp hdf5write.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hdf5write.o hdf5write.cpp

cxxutils.o: garfields/cxxutils.cc garfields/cxxutils.h \
		garfields/message_error.h \
		garfields/constants.h \
		garfields/datatypes.h \
		garfields/openmp_support.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cxxutils.o garfields/cxxutils.cc

fftOperators.o: garfields/fftOperators.cc garfields/fftOperators.h \
		garfields/functions.h \
		garfields/fftw_array.h \
		garfields/variables.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fftOperators.o garfields/fftOperators.cc

helicity.o: garfields/helicity.cc garfields/fftOperators.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helicity.o garfields/helicity.cc

magVar.o: garfields/magVar.cc garfields/fftOperators.h \
		garfields/functions.h \
		garfields/garFields.h \
		garfields/fftw_array.h \
		garfields/variables.h \
		garfields/gaussRandom.h \
		garfields/kvector.h \
		garfields/divclean.h \
		garfields/helicity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o magVar.o garfields/magVar.cc

divclean.o: garfields/divclean.cc garfields/fftOperators.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o divclean.o garfields/divclean.cc

functions.o: garfields/functions.cc garfields/fftOperators.h \
		garfields/functions.h \
		garfields/fftw_array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o functions.o garfields/functions.cc

gaussRandom.o: garfields/gaussRandom.cc garfields/fftOperators.h \
		garfields/functions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gaussRandom.o garfields/gaussRandom.cc

kvector.o: garfields/kvector.cc garfields/kvector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o kvector.o garfields/kvector.cc

power_gen.o: garfields/power_gen.cc garfields/fftOperators.h \
		garfields/functions.h \
		garfields/variables.h \
		garfields/fftw_array.h \
		garfields/kvector.h \
		garfields/power_gen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o power_gen.o garfields/power_gen.cc

variables.o: garfields/variables.cc garfields/variables.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o variables.o garfields/variables.cc

garFields.o: garfields/garFields.cc garfields/fftOperators.h \
		garfields/functions.h \
		garfields/garFields.h \
		garfields/fftw_array.h \
		garfields/variables.h \
		garfields/gaussRandom.h \
		garfields/kvector.h \
		garfields/divclean.h \
		garfields/helicity.h \
		garfields/magVar.h \
		garfields/power_gen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o garFields.o garfields/garFields.cc

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

